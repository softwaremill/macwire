#include commonSimpleClasses

@Module
trait AModule {
    lazy val a = wire[A]
}

// BModule inherits the 'module' feature from its parent
trait BModule extends AModule {
    lazy val b = wire[B]
}

class ABModule extends BModule

class App(abModule: ABModule) {
    lazy val c = wire[C]
}

object Test {
    lazy val abModule = wire[ABModule]
    lazy val app = wire[App]
}

require(Test.app.c.a eq Test.abModule.a)
require(Test.app.c.b eq Test.abModule.b)